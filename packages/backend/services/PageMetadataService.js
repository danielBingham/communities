/******************************************************************************
 *
 *  Communities -- Non-profit, cooperative social media 
 *  Copyright (C) 2022 - 2024 Daniel Bingham 
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU Affero General Public License as published
 *  by the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Affero General Public License for more details.
 *
 *  You should have received a copy of the GNU Affero General Public License
 *  along with this program.  If not, see <https://www.gnu.org/licenses/>.
 *
 ******************************************************************************/
/**
 * A service to handle collecting page metadata to be rendered into the <head>
 * of the page.
 */
module.exports = class PageMetadataService {

    constructor(core) {
        this.database = core.database
        this.logger = core.logger
        this.config = core.config


        this.baseMetadata = {
            url: core.config.host,
            applicationName: "Communities",
            title: "Communities -- Non-profit Social Media",
            description: "Communities is a non-profit social media platform.",
            image: `${core.config.host}img/how-it-works/review-example-2.png`,
            type: "website"
        }
    }

    /**
     * Get the base metadata for the root ('/') page.
     *
     * @return {Object} An object with the appropriate metadata.  See
     * constructor for object structure.
     */
    getRoot() {
        return this.baseMetadata
    }

    /**
     * Get the base metadata object for the ('/') page with development assets
     * generated by webpack-dev-middleware included.
     *
     * DEVELOPMENT ONLY.  This method is intended to be used in development
     * environments with webpack-dev-middleware only.
     *
     * @param {Object} assetsByChunkName    The hash of asset arrays by chunk
     * name returned from webpack-dev-middleware in the server side rendering
     * handler.
     *
     * @return {object} The metadata object populated with development assets.
     */
    getRootWithDevAssets(assetsByChunkName) {
        const metadata = { ...this.baseMetadata }
        
        const devAssets = []
        for(const asset of assetsByChunkName.main) {
            devAssets.push(`<script defer="defer" src="${this.config.host}${asset}"></script>`)
        }

        metadata.devAssets = devAssets 
        return metadata
    }
}
